import com.hqq.core.plugin.*

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    buildFeatures {
        viewBinding = true
    }
    dataBinding {
        enabled = true
    }
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion
    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionName "1.0"
        versionCode 1
        def versionPropsFile = file('version.properties')
        if (versionPropsFile.canRead()) {
            //载入version.properties
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            //从version.properties根据关键字"VERSION_CODE"取Integer
            def verCode = versionProps['VERSION_CODE'].toInteger()
            //判断build模式，如果是发布模式（':app:assembleRelease'）则自增版本号，并且写回version.properties文件中
            def runTasks = gradle.startParameter.taskNames
            if ('assemble' in runTasks) {
                versionProps['VERSION_CODE'] = (++verCode).toString()
                versionProps.store(versionPropsFile.newWriter(), null)
            }
            versionCode verCode
        } else {
            throw new GradleException("Could not read version.properties!")
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //主要是下面这一段
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Core_${variant.buildType.name}_${defaultConfig.versionName}_${defaultConfig.versionCode}" + '.aar'
        }
    }

//    //自定义aar名称
//    android.libraryVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.aar')) {
//                def fileName = "自定义.aar"
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }

}

dependencies {
    api Android.activityKtx
    api Android.meteria

    api AndroidX.coreKtx
    api AndroidX.viewModelKtx
    api AndroidX.liveDataKtx
    api AndroidX.runTimeKtx

    api AndroidX.constraintlayout
    api AndroidX.appcompat
    api AndroidX.recyclerview
    api AndroidX.viewpager2


    api Fragment.runtime
    api Fragment.runtimeKtx
//    api Fragment.testing

    api DimensCompat.iDimensCompat
    api Gson.gson
    api Luban.luban
    api BaseRecyclerViewAdapterHelper.baseRecyclerViewAdapterHelper
    api UltraPtr.ultraPtr
    api Glide.glide
    kapt Glide.glideCompiler

    //版本要与gradle版本一致
    api Kt.stdlibJdk8
    kapt Android.dataBindingCompiler

    api Gson.gson
    api Retrofit.retrofit
    api Retrofit.converterGson
    api Retrofit.loggingInterceptor

}
repositories {
    mavenCentral()
}


