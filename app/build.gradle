apply plugin: 'com.android.application'
android {
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.hqq.core"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true
        //如果version.properties文件可读则执行操作
        def versionPropsFile = file('version.properties')
        if (versionPropsFile.canRead()) {
            //载入version.properties
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            //从version.properties根据关键字"VERSION_CODE"取Integer
            def verCode = versionProps['VERSION_CODE'].toInteger()
            //判断build模式，如果是发布模式（':app:assembleRelease'）则自增版本号，并且写回version.properties文件中
            def runTasks = gradle.startParameter.taskNames
            for (String runName in runTasks) {
                if (runName.contains("Release")) {
                    versionProps['VERSION_CODE'] = (++verCode).toString()
                    versionProps.store(versionPropsFile.newWriter(), null)
                    break
                } else if ("assemble".equals(runName)) {
                    versionProps['VERSION_CODE'] = (++verCode).toString()
                    versionProps.store(versionPropsFile.newWriter(), null)
                    break
                }
            }
            versionCode verCode
            flavorDimensions versionCode + ""
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./debug.keystore')
            storePassword 'android'
        }
    }
    productFlavors {
        debugApp {
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors.all {
            // 渠道名称
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
    android.applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release'))
            variant.outputs.all {
                // outputFileName = "driver_${variant.productFlavors[0].name}_v${variant.versionName}(${variant.versionCode}).apk"
                outputFileName = "${variant.productFlavors[0].name}_v${variant.versionName}(${variant.versionCode}).apk"
            }
    }
    sourceSets {
        main { res.srcDirs = ['src/main/res', 'src/main/res-main', 'src/main/res-night'] }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':Core')
    api rootProject.ext.dependencies.constraintlayout

    debugImplementation  rootProject.ext.dependencies.leakcanary



//    implementation 'skin.support:skin-support:3.1.4'                   // skin-support 基础控件支持
    implementation 'skin.support:skin-support:4.0.4'                   // skin-support
    implementation 'skin.support:skin-support-appcompat:4.0.4'         // skin-support 基础控件支持
    implementation 'skin.support:skin-support-design:4.0.4'
    // skin-support-design material design 控件支持[可选]
    implementation 'skin.support:skin-support-cardview:4.0.4'
    // skin-support-cardview CardView 控件支持[可选]
    implementation 'skin.support:skin-support-constraint-layout:4.0.4'
    // skin-support-constraint-layout ConstraintLayout 控件支持[可选]
}
