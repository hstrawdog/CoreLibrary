plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'dagger.hilt.android.plugin'

}


import com.easy.core.plugin.*

android {
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileSdkVersion BuildVersionConfig.compileSdkVersion
    buildToolsVersion BuildVersionConfig.buildToolsVersion
    defaultConfig {
        applicationId "com.easy.core"
        minSdkVersion BuildVersionConfig.minSdkVersion
        targetSdkVersion BuildVersionConfig.targetSdkVersion
        versionName "1.0.0"
        versionCode 1
        flavorDimensions "versionCode"
        multiDexEnabled true
    }


    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./debug.keystore')
            storePassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    productFlavors {
        debugApp {
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors.all {
            // 渠道名称
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
    packagingOptions {
        //Compose需要的配置
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    android.applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release'))
            variant.outputs.all {
                // outputFileName = "driver_${variant.productFlavors[0].name}_v${variant.versionName}(${variant.versionCode}).apk"
                outputFileName = "${variant.productFlavors[0].name}_v${variant.versionName}(${variant.versionCode}).apk"
            }
    }
    sourceSets {
        main { res.srcDirs = ['src/main/res', 'src/main/res-main', 'src/main/res-night']
            assets {
                srcDirs 'src/main/assets'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':Core')
    implementation project(':WeChat')
    implementation project(':ALiBaBa')
    implementation project(':Album')

//    implementation 'com.github.hstrawdog.CoreLibrary:ALiBaBa:1.3.14'
//    implementation 'com.github.hstrawdog.CoreLibrary:Album:1.3.14'
//    implementation 'com.github.hstrawdog.CoreLibrary:WeChat:1.3.14'

    implementation "androidx.room:room-runtime:2.4.0-alpha03"
    api libs.constraintLayout

    kapt 'androidx.room:room-compiler:2.4.0-alpha03'

    debugImplementation libs.leakcanary

    // Hilt dependencies
    implementation libs.daggerRuntime

//    implementation Hilt.compiler
//    implementation Hilt.viewModule
    kapt libs.daggerCompiler
    kapt libs.hiltCompiler



    api 'com.amap.api:location:latest.integration'

//    implementation 'skin.support:skin-support:3.1.4'   // skin-support 基础控件支持
    api 'skin.support:skin-support:4.0.4'                   // skin-support
    api 'skin.support:skin-support-appcompat:4.0.4'         // skin-support 基础控件支持
    api 'skin.support:skin-support-design:4.0.4'
    // skin-support-design material design 控件支持[可选]
    api 'skin.support:skin-support-cardview:4.0.4'
    // skin-support-cardview CardView 控件支持[可选]
    api 'skin.support:skin-support-constraint-layout:4.0.4'
    // skin-support-constraint-layout ConstraintLayout 控件支持[可选]

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    implementation 'com.android.support:multidex:1.0.3'

    // Compose ui 相关的基础支持
    implementation 'androidx.compose.ui:ui:1.0.5'
    // Compose ui 预览 支持预览，类似 XML 的预览模式，并支持 点击、滑动等 XML 不支持的交互操作
    implementation 'androidx.compose.ui:ui-tooling:1.0.5'
    // Compose 基于 ui 层封装的更实用的组件库比如 Scroll、Box 等
    implementation 'androidx.compose.foundation:foundation:1.0.5'
    // Compose Material Design
    implementation 'androidx.compose.material:material:1.0.5'
    // Compose Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.0.5'
    implementation 'androidx.compose.material:material-icons-extended:1.0.5'
    // 将 Activity 支持 Compose
    implementation 'androidx.activity:activity-compose:1.3.1'
    // Compose ViewModels 存储数据
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07'
    // Compose 其他集成
    implementation 'androidx.compose.runtime:runtime-livedata:1.0.5'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.0.5'

    // Compose UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.5'

    // 包重复
    implementation group: 'com.google.guava', name: 'guava', version: '27.0.1-android'


    implementation libs.work

    //裁剪图片第三方
    api 'com.isseiaoki:simplecropview:1.1.8'
    api "io.reactivex.rxjava2:rxandroid:2.0.2"
    api "io.reactivex.rxjava2:rxjava:2.1.10"

}
kapt {
    correctErrorTypes true
}