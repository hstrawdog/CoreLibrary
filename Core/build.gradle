plugins {
    alias(libs.plugins.androidLibrary)
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'maven-publish'
}
apply from: rootProject.file("gradle/maven-publish.gradle")



android {
    buildFeatures {
        //开启 viewBinding 支持
        viewBinding true
        //开启 dataBinding 支持
        dataBinding true
        //开启 Compose 支持
//        compose true
    }
    compileSdk 31
//    buildToolsVersion "31.0.0"
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31
        versionName "1.0"
        versionCode 1

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lint {
        baseline = file("lint-baseline.xml")
    }
    publishing {
        singleVariant("release") {
            // if you don't want sources/javadoc, remove these lines
            withSourcesJar()
            withJavadocJar()
        }
    }

}

dependencies {
    //版本要与gradle版本一致
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.21"
    api project(':DimensCompat')

//    api CoilKt.coilKt
    api libs.coilKt

    // Appcompat   包含 core
//    api Appcompat.appcompat
//    api Appcompat.coreKtx
    api libs.appcompat.core
    api libs.appcompat.coreKtx

    //  kotlin拓展包
//    api KTX.activityKtx
//    api KTX.fragmentKtx
    api libs.activityKtx
    api libs.fragmentKtx

    //  androidX 组件
//    api Components.constraintLayout
//    api Components.recyclerview
//    api Components.viewpager2
//    api Components.meteria

    api libs.constraintLayout
    api libs.recyclerview
    api libs.viewpager2
    api libs.meteria

    // 生命周期
//    api Lifecycle.lifecycleViewModelKtx
//    api Lifecycle.lifecycleLivedataKtx
//    api Lifecycle.lifecycleRunTimeKtx
    api libs.lifecycleViewModelKtx
    api libs.lifecycleLivedataKtx
    api libs.lifecycleRunTimeKtx


    // 屏幕适配
//    api DimensCompat.iDimensCompat

    // gson解析
    api libs.gson

    // 压缩
//    api Luban.luban
    api libs.luban
    // 上拉加载
//    api BaseRecyclerViewAdapterHelper.baseRecyclerViewAdapterHelper
    api libs.baseRecyclerViewAdapterHelper

    // 下拉刷新
//    api UltraPtr.ultraPtr
    api libs.ultraPtr
    // 图片加载
//    api Glide.glide
//    kapt Glide.glideCompiler

    api libs.glide
//    小型项目或者对性能要求不高的项目并不需要迁移至 ksp
    kapt libs.glideCompiler


    // retrofit 请求
    api libs.retrofit
    api libs.converterGson
    api libs.loggingInterceptor

//    api Retrofit.retrofit
//    api Retrofit.converterGson
//    api Retrofit.loggingInterceptor

}


afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            group = 'com.github.hstrawdog'
            version = '1.3.0'
            //发布release版本
//            release(MavenPublication) {
                // Applies the component for the release build variant.
//                from components.release
                //groupId通常是自己的gitee或者GitHub的账户地址
//                groupId = group
                //artifactId通常是指待发布项目的名称，也就是别名
//                artifactId = 'Core'
                // 主要是这一行
//                artifact sourcesJar
                //version通常是指待发布项目的版本号，这里是写死的，通常我们取项目versionName
//                version = version
//                afterEvaluate {
//                    from components.release
//                }
//            }
        }
    }
}